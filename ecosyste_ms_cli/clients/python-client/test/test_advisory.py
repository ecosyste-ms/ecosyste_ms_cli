# coding: utf-8

"""
    Ecosyste.ms: Packages

    An open API service providing package, version and dependency metadata of many open source software ecosystems and registries.

    The version of the OpenAPI document: 1.1.0
    Contact: support@ecosyste.ms
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ecosyste_ms_cli.clients.packages.models.advisory import Advisory

class TestAdvisory(unittest.TestCase):
    """Advisory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Advisory:
        """Test Advisory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Advisory`
        """
        model = Advisory()
        if include_optional:
            return Advisory(
                uuid = '',
                url = '',
                title = '',
                description = '',
                origin = '',
                severity = '',
                published_at = '',
                withdrawn_at = '',
                classification = '',
                cvss_score = 1.337,
                cvss_vector = '',
                references = [
                    ''
                    ],
                source_kind = '',
                identifiers = [
                    ''
                    ],
                packages = [
                    None
                    ],
                created_at = '',
                updated_at = ''
            )
        else:
            return Advisory(
                uuid = '',
                url = '',
                title = '',
                description = '',
                origin = '',
                severity = '',
                published_at = '',
                withdrawn_at = '',
                classification = '',
                cvss_score = 1.337,
                cvss_vector = '',
                references = [
                    ''
                    ],
                source_kind = '',
                identifiers = [
                    ''
                    ],
                packages = [
                    None
                    ],
                created_at = '',
                updated_at = '',
        )
        """

    def testAdvisory(self):
        """Test Advisory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
