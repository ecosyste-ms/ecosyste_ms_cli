---
openapi: 3.0.1
info:
  title: 'Ecosyste.ms: Dependabot'
  description: 'An open API service providing issue metadata for open source projects. '
  contact:
    name: Ecosyste.ms
    email: support@ecosyste.ms
    url: https://ecosyste.ms
  version: 1.0.0
  license:
    name: CC-BY-SA-4.0
    url: https://creativecommons.org/licenses/by-sa/4.0/
externalDocs:
  description: GitHub Repository
  url: https://github.com/ecosyste-ms/dependabot
servers:
- url: https://dependabot.ecosyste.ms/api/v1
paths:
  "/packages":
    get:
      summary: List packages
      operationId: getPackages
      parameters:
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      - name: ecosystem
        in: query
        description: Filter by ecosystem
        required: false
        schema:
          type: string
      - name: name
        in: query
        description: Search by package name
        required: false
        schema:
          type: string
      - name: repository_url
        in: query
        description: Filter by repository URL
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: field to order results by (name or issues_count)
        required: false
        schema:
          type: string
      - name: order
        in: query
        description: direction to order results by (asc or desc)
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  packages:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Package"
  "/packages/ecosystems":
    get:
      summary: List available ecosystems
      operationId: getPackageEcosystems
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  "/packages/{ecosystem}":
    get:
      summary: List packages in an ecosystem
      operationId: getEcosystemPackages
      parameters:
      - in: path
        name: ecosystem
        schema:
          type: string
        required: true
        description: ecosystem name
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      - name: name
        in: query
        description: Search by package name
        required: false
        schema:
          type: string
      - name: repository_url
        in: query
        description: Filter by repository URL
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: field to order results by (name or issues_count)
        required: false
        schema:
          type: string
      - name: order
        in: query
        description: direction to order results by (asc or desc)
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  packages:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Package"
  "/packages/{ecosystem}/{name}":
    get:
      summary: Get a specific package
      operationId: getPackage
      parameters:
      - in: path
        name: ecosystem
        schema:
          type: string
        required: true
        description: ecosystem name
      - in: path
        name: name
        schema:
          type: string
        required: true
        description: package name
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Package"
                - type: object
                  properties:
                    recent_issues:
                      type: array
                      items:
                        "$ref": "#/components/schemas/Issue"
                    issue_packages:
                      type: array
                      items:
                        "$ref": "#/components/schemas/IssuePackage"
  "/issues/{issueId}/packages":
    get:
      summary: Get packages for a specific issue
      operationId: getIssuePackages
      parameters:
      - in: path
        name: issueId
        schema:
          type: integer
        required: true
        description: issue ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  issue_packages:
                    type: array
                    items:
                      allOf:
                      - "$ref": "#/components/schemas/IssuePackage"
                      - type: object
                        properties:
                          package:
                            "$ref": "#/components/schemas/Package"
  "/repositories/lookup":
    get:
      summary: Lookup repository metadata
      operationId: repositoriesLookup
      parameters:
      - name: url
        in: query
        description: The URL of the repository to lookup
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Repository"
  "/hosts":
    get:
      summary: list registies
      operationId: getRegistries
      parameters:
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Host"
  "/hosts/{hostName}":
    get:
      summary: get a host by name
      operationId: getHost
      parameters:
      - in: path
        name: hostName
        schema:
          type: string
        required: true
        description: name of host
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Host"
  "/hosts/{hostName}/repositories":
    get:
      summary: get a list of repositories from a host
      operationId: getHostRepositories
      parameters:
      - in: path
        name: hostName
        schema:
          type: string
        required: true
        description: name of host
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      - name: created_after
        in: query
        description: filter by created_at after given time
        required: false
        schema:
          type: string
          format: date-time
      - name: updated_after
        in: query
        description: filter by updated_at after given time
        required: false
        schema:
          type: string
          format: date-time
      - name: sort
        in: query
        description: field to order results by
        required: false
        schema:
          type: string
      - name: order
        in: query
        description: direction to order results by
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Repository"
  "/hosts/{hostName}/repositories/{repoName}":
    get:
      summary: get a repository from a host
      operationId: getHostRepository
      parameters:
      - in: path
        name: hostName
        schema:
          type: string
        required: true
        description: name of host
      - in: path
        name: repoName
        schema:
          type: string
        required: true
        description: name of repository
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Repository"
  "/hosts/{hostName}/repositories/{repoName}/issues":
    get:
      summary: get a list of issues from a repository
      operationId: getHostRepositoryIssues
      parameters:
      - in: path
        name: hostName
        schema:
          type: string
        required: true
        description: name of host
      - in: path
        name: repoName
        schema:
          type: string
        required: true
        description: name of repository
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      - name: created_after
        in: query
        description: filter by created_at after given time
        required: false
        schema:
          type: string
          format: date-time
      - name: updated_after
        in: query
        description: filter by updated_at after given time
        required: false
        schema:
          type: string
          format: date-time
      - name: sort
        in: query
        description: field to order results by
        required: false
        schema:
          type: string
      - name: order
        in: query
        description: direction to order results by
        required: false
        schema:
          type: string
      - name: pull_request
        in: query
        description: Filter by pull request status (true/false)
        required: false
        schema:
          type: string
      - name: state
        in: query
        description: Filter by issue state (open/closed)
        required: false
        schema:
          type: string
      - name: security
        in: query
        description: Filter for security-related PRs containing CVE/GHSA/RUSTSEC identifiers
          (true/false)
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Issue"
  "/hosts/{hostName}/repositories/{repoName}/issues/{issueNumber}":
    get:
      summary: get an issue from a repository
      operationId: getHostRepositoryIssue
      parameters:
      - in: path
        name: hostName
        schema:
          type: string
        required: true
        description: name of host
      - in: path
        name: repoName
        schema:
          type: string
        required: true
        description: name of repository
      - in: path
        name: issueNumber
        schema:
          type: integer
        required: true
        description: number of issue
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Issue"
  "/advisories":
    get:
      summary: List security advisories
      operationId: getAdvisories
      parameters:
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      - name: severity
        in: query
        description: Filter by severity (CRITICAL, HIGH, MODERATE, LOW)
        required: false
        schema:
          type: string
          enum:
          - CRITICAL
          - HIGH
          - MODERATE
          - LOW
      - name: ecosystem
        in: query
        description: Filter by ecosystem
        required: false
        schema:
          type: string
      - name: package_name
        in: query
        description: Filter by package name (requires ecosystem)
        required: false
        schema:
          type: string
      - name: repository_url
        in: query
        description: Filter by repository URL
        required: false
        schema:
          type: string
      - name: q
        in: query
        description: Search by advisory identifier
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: field to order results by (published_at, severity, or issues_count)
        required: false
        schema:
          type: string
          enum:
          - published_at
          - severity
          - issues_count
      - name: order
        in: query
        description: direction to order results by (asc or desc)
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  advisories:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Advisory"
  "/advisories/{advisoryId}":
    get:
      summary: Get a specific security advisory
      operationId: getAdvisory
      parameters:
      - in: path
        name: advisoryId
        schema:
          type: string
        required: true
        description: advisory UUID or identifier (e.g., CVE-2023-1234 or GHSA-xxxx-xxxx-xxxx)
      - name: state
        in: query
        description: Filter related issues by state (open, closed, merged)
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - merged
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - "$ref": "#/components/schemas/Advisory"
                - type: object
                  properties:
                    issues:
                      type: array
                      items:
                        "$ref": "#/components/schemas/Issue"
components:
  schemas:
    Host:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        kind:
          type: string
        repositories_count:
          type: integer
        issues_count:
          type: integer
        pull_requests_count:
          type: integer
        authors_count:
          type: integer
        last_synced_at:
          type: string
          format: date-time
        icon_url:
          type: string
    Repository:
      type: object
      properties:
        full_name:
          type: string
        html_url:
          type: string
        last_synced_at:
          type: string
          format: date-time
        status:
          type: string
        issues_count:
          type: integer
        pull_requests_count:
          type: integer
        avg_time_to_close_issue:
          type: number
        avg_time_to_close_pull_request:
          type: number
        issues_closed_count:
          type: integer
        pull_requests_closed_count:
          type: integer
        pull_request_authors_count:
          type: integer
        issue_authors_count:
          type: integer
        avg_comments_per_issue:
          type: number
        avg_comments_per_pull_request:
          type: number
        merged_pull_requests_count:
          type: integer
        bot_issues_count:
          type: integer
        bot_pull_requests_count:
          type: integer
        past_year_issues_count:
          type: integer
        past_year_pull_requests_count:
          type: integer
        past_year_avg_time_to_close_issue:
          type: number
        past_year_avg_time_to_close_pull_request:
          type: number
        past_year_issues_closed_count:
          type: integer
        past_year_pull_requests_closed_count:
          type: integer
        past_year_pull_request_authors_count:
          type: integer
        past_year_issue_authors_count:
          type: integer
        past_year_avg_comments_per_issue:
          type: number
        past_year_avg_comments_per_pull_request:
          type: number
        past_year_merged_pull_requests_count:
          type: integer
        past_year_bot_issues_count:
          type: integer
        past_year_bot_pull_requests_count:
          type: integer
        updated_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        issues_url:
          type: string
    Issue:
      type: object
      properties:
        uuid:
          type: integer
        number:
          type: integer
        node_id:
          type: string
        title:
          type: string
        user:
          type: string
        labels:
          type: array
          items:
            type: string
        assignees:
          type: array
          items:
            type: string
        comments_count:
          type: integer
        pull_request:
          type: boolean
        author_association:
          type: string
        state:
          type: string
        state_reason:
          type: string
        time_to_close:
          type: integer
        merged_at:
          type: string
          format: date-time
        dependency_metadata:
          type: object
        locked:
          type: boolean
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
        html_url:
          type: string
        url:
          type: string
        body:
          type: string
    Package:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        ecosystem:
          type: string
        repository_url:
          type: string
        issues_count:
          type: integer
        purl:
          type: string
        metadata:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    IssuePackage:
      type: object
      properties:
        old_version:
          type: string
        new_version:
          type: string
        update_type:
          type: string
        path:
          type: string
        pr_created_at:
          type: string
          format: date-time
        version_change:
          type: string
        issue:
          "$ref": "#/components/schemas/Issue"
    Advisory:
      type: object
      properties:
        uuid:
          type: string
          description: Unique identifier for the advisory
        url:
          type: string
          description: URL to the advisory on GitHub
        title:
          type: string
          description: Advisory title
        description:
          type: string
          description: Advisory description
        origin:
          type: string
          description: Origin of the advisory
        severity:
          type: string
          enum:
          - CRITICAL
          - HIGH
          - MODERATE
          - LOW
          description: Severity level
        published_at:
          type: string
          format: date-time
          description: When the advisory was published
        withdrawn_at:
          type: string
          format: date-time
          description: When the advisory was withdrawn (if applicable)
        classification:
          type: string
          description: Advisory classification
        cvss_score:
          type: number
          description: CVSS score
        cvss_vector:
          type: string
          description: CVSS vector string
        references:
          type: array
          items:
            type: string
          description: Reference URLs
        source_kind:
          type: string
          description: Source of the advisory
        identifiers:
          type: array
          items:
            type: string
          description: Advisory identifiers (CVE, GHSA, etc.)
        repository_url:
          type: string
          description: Repository URL associated with the advisory
        blast_radius:
          type: number
          description: Blast radius metric
        packages:
          type: array
          items:
            type: object
            properties:
              ecosystem:
                type: string
              package_name:
                type: string
              versions:
                type: array
                items:
                  type: object
                  properties:
                    vulnerable_version_range:
                      type: string
                    first_patched_version:
                      type: string
          description: Affected packages
        epss_percentage:
          type: number
          description: EPSS percentage
        epss_percentile:
          type: number
          description: EPSS percentile
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
