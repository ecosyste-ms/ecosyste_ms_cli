---
openapi: 3.0.1
info:
  title: 'Ecosyste.ms: summary'
  description: An open API service for producing an overview of a list of open source
    projects.
  contact:
    name: Ecosyste.ms
    email: support@ecosyste.ms
    url: https://ecosyste.ms
  version: 1.0.0
  license:
    name: CC-BY-SA-4.0
    url: https://creativecommons.org/licenses/by-sa/4.0/
externalDocs:
  description: GitHub Project
  url: https://github.com/ecosyste-ms/summary
servers:
- url: https://summary.ecosyste.ms/api/v1
paths:
  "/projects":
    get:
      summary: get projects
      operationId: getProjects
      tags:
      - projects
      parameters:
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Project"
  "/projects/{id}":
    get:
      summary: get a project by id
      operationId: getProject
      tags:
      - projects
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: id of the project
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Project"
  "/projects/lookup":
    get:
      summary: lookup project by url
      operationId: lookupProject
      tags:
      - projects
      parameters:
      - name: url
        in: query
        description: url of the project
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Project"
  "/collections":
    get:
      summary: get collections
      operationId: getCollections
      tags:
      - collections
      parameters:
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Collection"
  "/collections/{id}":
    get:
      summary: get a collection by id
      operationId: getCollection
      tags:
      - collections
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: id of the collection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Collection"
  "/collections/{id}/projects":
    get:
      summary: get projects in a collection
      operationId: getCollectionProjects
      tags:
      - collections
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: id of the collection
      - name: page
        in: query
        description: pagination page number
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of records to return
        required: false
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Project"
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
        last_synced_at:
          type: string
          format: date-time
        repository:
          type: object
        owner:
          type: object
        packages:
          type: array
          items:
            type: object
        commits:
          type: object
        issues:
          type: object
        events:
          type: object
        keywords:
          type: array
          items:
            type: string
        dependencies:
          type: object
        score:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        avatar_url:
          type: string
        language:
          type: string
        publiccode:
          type: object
        codemeta:
          type: object
    Collection:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        projects_url:
          type: string
        html_url:
          type: string
