# coding: utf-8

"""
    Ecosyste.ms: Packages

    An open API service providing package, version and dependency metadata of many open source software ecosystems and registries.

    The version of the OpenAPI document: 1.1.0
    Contact: support@ecosyste.ms
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ecosyste_ms_cli.clients.packages.models.package import Package

class TestPackage(unittest.TestCase):
    """Package unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Package:
        """Test Package
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Package`
        """
        model = Package()
        if include_optional:
            return Package(
                id = 56,
                name = '',
                ecosystem = '',
                description = '',
                homepage = '',
                licenses = '',
                normalized_licenses = [
                    ''
                    ],
                repository_url = '',
                keywords_array = [
                    ''
                    ],
                namespace = '',
                versions_count = 56,
                first_release_published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                latest_release_published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                latest_release_number = '',
                last_synced_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                registry_url = '',
                documentation_url = '',
                install_command = '',
                metadata = None,
                repo_metadata = None,
                repo_metadata_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dependent_packages_count = 56,
                downloads = 56,
                downloads_period = '',
                dependent_repos_count = 56,
                rankings = None,
                purl = '',
                advisories = [
                    ecosyste_ms_cli.clients.packages.models.advisory.Advisory(
                        uuid = '', 
                        url = '', 
                        title = '', 
                        description = '', 
                        origin = '', 
                        severity = '', 
                        published_at = '', 
                        withdrawn_at = '', 
                        classification = '', 
                        cvss_score = 1.337, 
                        cvss_vector = '', 
                        references = [
                            ''
                            ], 
                        source_kind = '', 
                        identifiers = [
                            ''
                            ], 
                        packages = [
                            None
                            ], 
                        created_at = '', 
                        updated_at = '', )
                    ],
                versions_url = '',
                version_numbers_url = '',
                dependent_packages_url = '',
                related_packages_url = '',
                docker_usage_url = '',
                docker_dependents_count = 56,
                docker_downloads_count = 56,
                usage_url = '',
                dependent_repositories_url = '',
                status = '',
                funding_links = [
                    ''
                    ],
                maintainers = [
                    ecosyste_ms_cli.clients.packages.models.maintainer.Maintainer(
                        uuid = '', 
                        login = '', 
                        name = '', 
                        email = '', 
                        url = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        packages_count = 56, 
                        packages_url = '', 
                        total_downloads = 56, 
                        html_url = '', 
                        role = '', )
                    ],
                critical = True
            )
        else:
            return Package(
                id = 56,
                name = '',
                ecosystem = '',
                description = '',
                homepage = '',
                licenses = '',
                normalized_licenses = [
                    ''
                    ],
                repository_url = '',
                keywords_array = [
                    ''
                    ],
                namespace = '',
                versions_count = 56,
                first_release_published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                latest_release_published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                latest_release_number = '',
                last_synced_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                registry_url = '',
                documentation_url = '',
                install_command = '',
                metadata = None,
                repo_metadata = None,
                repo_metadata_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dependent_packages_count = 56,
                downloads = 56,
                downloads_period = '',
                dependent_repos_count = 56,
                rankings = None,
                purl = '',
                advisories = [
                    ecosyste_ms_cli.clients.packages.models.advisory.Advisory(
                        uuid = '', 
                        url = '', 
                        title = '', 
                        description = '', 
                        origin = '', 
                        severity = '', 
                        published_at = '', 
                        withdrawn_at = '', 
                        classification = '', 
                        cvss_score = 1.337, 
                        cvss_vector = '', 
                        references = [
                            ''
                            ], 
                        source_kind = '', 
                        identifiers = [
                            ''
                            ], 
                        packages = [
                            None
                            ], 
                        created_at = '', 
                        updated_at = '', )
                    ],
                versions_url = '',
                dependent_packages_url = '',
                related_packages_url = '',
                docker_usage_url = '',
                docker_dependents_count = 56,
                docker_downloads_count = 56,
                usage_url = '',
                dependent_repositories_url = '',
                status = '',
                funding_links = [
                    ''
                    ],
                maintainers = [
                    ecosyste_ms_cli.clients.packages.models.maintainer.Maintainer(
                        uuid = '', 
                        login = '', 
                        name = '', 
                        email = '', 
                        url = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        packages_count = 56, 
                        packages_url = '', 
                        total_downloads = 56, 
                        html_url = '', 
                        role = '', )
                    ],
                critical = True,
        )
        """

    def testPackage(self):
        """Test Package"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
