# coding: utf-8

"""
    Ecosyste.ms: Packages

    An open API service providing package, version and dependency metadata of many open source software ecosystems and registries.

    The version of the OpenAPI document: 1.1.0
    Contact: support@ecosyste.ms
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ecosyste_ms_cli.clients.packages.models.version_with_package import VersionWithPackage

class TestVersionWithPackage(unittest.TestCase):
    """VersionWithPackage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VersionWithPackage:
        """Test VersionWithPackage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VersionWithPackage`
        """
        model = VersionWithPackage()
        if include_optional:
            return VersionWithPackage(
                id = 56,
                number = '',
                published_at = '',
                licenses = '',
                integrity = '',
                status = '',
                download_url = '',
                registry_url = '',
                documentation_url = '',
                install_command = '',
                metadata = None,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                purl = '',
                latest = True,
                version_url = '',
                package_url = ''
            )
        else:
            return VersionWithPackage(
                id = 56,
                number = '',
                published_at = '',
                licenses = '',
                integrity = '',
                status = '',
                download_url = '',
                registry_url = '',
                documentation_url = '',
                install_command = '',
                metadata = None,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                purl = '',
                latest = True,
                version_url = '',
                package_url = '',
        )
        """

    def testVersionWithPackage(self):
        """Test VersionWithPackage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
