# coding: utf-8

"""
    Ecosyste.ms: Packages

    An open API service providing package, version and dependency metadata of many open source software ecosystems and registries.

    The version of the OpenAPI document: 1.1.0
    Contact: support@ecosyste.ms
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ecosyste_ms_cli.clients.packages.models.registry import Registry

class TestRegistry(unittest.TestCase):
    """Registry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Registry:
        """Test Registry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Registry`
        """
        model = Registry()
        if include_optional:
            return Registry(
                name = '',
                url = '',
                ecosystem = '',
                default = True,
                packages_count = 56,
                versions_count = 56,
                maintainers_count = 56,
                namespaces_count = 56,
                keywords_count = 56,
                downloads = 56,
                github = '',
                metadata = None,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                packages_url = '',
                maintainers_url = '',
                icon_url = '',
                purl_type = ''
            )
        else:
            return Registry(
                name = '',
                url = '',
                ecosystem = '',
                default = True,
                packages_count = 56,
                maintainers_count = 56,
                namespaces_count = 56,
                keywords_count = 56,
                downloads = 56,
                github = '',
                metadata = None,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                packages_url = '',
                maintainers_url = '',
                icon_url = '',
                purl_type = '',
        )
        """

    def testRegistry(self):
        """Test Registry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
